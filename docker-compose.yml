version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: social-messages-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: social_messages
      POSTGRES_USER: social_messages
      POSTGRES_PASSWORD: social_messages
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Initialize database schema on first run
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U social_messages"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - social-messages-network

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: social-messages-api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Application
      NODE_ENV: production
      PORT: 3000
      LOG_LEVEL: info
      
      # Database (using service name 'db' as host)
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: social_messages
      DB_PASSWORD: social_messages
      DB_NAME: social_messages
      DB_DIALECT: postgres
      
      # JWT - CHANGE THESE IN PRODUCTION!
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      JWT_EXPIRES_IN: 7d
      
      # Social Media API - REQUIRED: Set these via .env file
      SOCIAL_MEDIA_API_KEY: ${SOCIAL_MEDIA_API_KEY}
      SOCIAL_MEDIA_API_URL: ${SOCIAL_MEDIA_API_URL}
      SOCIAL_MEDIA_API_HISTORY_LAST_DAYS: 7
      SOCIAL_PLATFORMS: bluesky,reddit,threads,twitter
    ports:
      - "3000:3000"
    volumes:
      # Mount logs directory (optional)
      - ./logs:/app/logs
    networks:
      - social-messages-network
    # Run migrations before starting the app
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 5 &&
        echo 'Running database migrations...' &&
        npm run db:migrate:docker &&
        echo 'Starting application...' &&
        node src/index.js
      "

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: social-messages-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - social-messages-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  social-messages-network:
    driver: bridge
